{"version":3,"sources":["utils/queries.js","components/BodyList.js","pages/MainPage.js","utils/mutations.js","utils/auth.js","pages/Login.js","components/FoodForm.js","components/FoodList.js","pages/Singlebody.js","components/Footer.js","components/Header.js","pages/Signup.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["GET_BODYS","gql","_templateObject","_taggedTemplateLiteral","GET_SINGLEBODY","_templateObject2","_templateObject3","_templateObject4","_templateObject5","bodyList","_ref","bodys","title","length","_jsxs","children","_jsx","map","body","className","src","alt","plan","Link","to","concat","_id","MainPage","_useQuery","useQuery","loading","data","BodyList","LOGIN","ADD_USER","ADD_FOOD","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","_useState","useState","email","password","_useState2","_slicedToArray","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","mutationResponse","wrap","_context","prev","next","preventDefault","variables","sent","Auth","t0","console","log","stop","_x","apply","arguments","handleChange","_event$target","target","name","_objectSpread","_defineProperty","onSubmit","htmlFor","placeholder","type","id","onChange","FoodForm","bodyId","nameText","setNameText","_useState3","_useState4","calorieText","setCalorieText","_useState5","_useState6","fatText","setFatText","_useState7","_useState8","carbText","setCarbText","_useState9","_useState10","proteinText","setProteinText","AddFood","_ref2","_yield$AddFood","style","lineHeight","_event$target2","_event$target3","_event$target4","_event$target5","FoodList","_ref$foods","foods","_Fragment","borderBottom","food","image","width","height","category","calories","fats","carbs","protein","SingleBody","useParams","loggedIn","border","Footer","useLocation","navigate","useNavigate","pathname","onClick","role","Header","Signup","addUser","firstName","lastName","Nav","href","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","Singlebody","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4efecf84.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_BODYS = gql`\n  query  {\n  bodys {\n    _id\n    plan\n    foods {\n      _id\n      name\n      category\n      image\n      calories\n      fats\n      carbs\n      protein\n      isLowCalorie\n    }\n  }\n}\n`;\n\nexport const GET_SINGLEBODY = gql`\n  query GetSingleBody($bodyId: ID!) {\n    body(bodyId: $bodyId) {\n      _id\n      plan\n      foods {\n        _id\n        name\n        category\n        image\n        calories\n        fats\n        carbs\n        protein\n      }\n    }\n  }\n`;\n\n\n\n\n\n\nexport const GET_FOODS = gql`\nquery  {\n  foods {\n    _id\n    name\n    category\n    image\n    calories\n    fats\n    carbs\n    protein\n    isLowCalorie\n  }\n}\n`;\n\nexport const GET_FOOD_BY_ID = gql`\n  query GetFoodById($foodId: ID!) {\n    food(_id: $foodId) {\n      _id\n      name\n      category\n      image\n      calories\n      fats\n      carbs\n      protein\n      isLowCalorie\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query GetUser {\n    user {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst bodyList = ({ bodys, title }) => {\r\n    if (!bodys.length) {\r\n        return <h3>No bodys Yet</h3>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n            {bodys &&\r\n                bodys.map((body) => (\r\n                    <div key={body._id} className=\"card mb-3\">\r\n                        <img\r\n                            src=\"https://images.unsplash.com/photo-1517836357463-d25dfeac3438?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8Zml0bmVzc3xlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80/photo-1517836357463-d25dfeac3438?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8Zml0bmVzc3xlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\"\r\n                            alt={body.plan}\r\n                        />\r\n                        <Link\r\n                            className=\"btn btn-primary btn-block btn-squared\"\r\n                            to={`/bodies/${body._id}`}\r\n                        >\r\n                            Join the discussion on {body.plan}.\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default bodyList;","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { GET_BODYS } from '../utils/queries';\r\nimport BodyList from '../components/BodyList';\r\nconst MainPage = () => {\r\n  const { loading, data } = useQuery(GET_BODYS);\r\n   const bodys = data?.bodys || [];\r\n\r\n  return(\r\n    <main>\r\n      { <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n             <BodyList\r\n               bodys={bodys}\r\n               title=\"Some Feed for Body(s)...\"\r\n             />\r\n            \r\n          )}\r\n        </div> }\r\n    </main>\r\n  )\r\n\r\n}\r\n\r\nexport default MainPage;","import { gql } from '@apollo/client';\n\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\nmutation AddUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n  addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n    token\n    user {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n}\n`;\n\nexport const REMOVE_FOOD =gql`\nmutation RemoveFood($_id: ID!) {\n  removeFood(_id: $_id) {\n    _id\n    name\n    category\n    image\n    calories\n    fats\n    carbs\n    protein\n    isLowCalorie\n  }\n}`\n\n\nexport const ADD_FOOD = gql`\nmutation Mutation($bodyId: ID!, $name: String!, $category: String!, $calories: String!, $fats: String!, $carbs: String!, $protein: String!) {\n  addFood(bodyId: $bodyId, name: $name, category: $category, calories: $calories, fats: $fats, carbs: $carbs, protein: $protein) {\n    _id\n    name\n    category\n    calories\n    fats\n    carbs\n    protein\n  }\n}\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_FOOD} from '../utils/mutations';\r\n\r\nconst FoodForm =({bodyId}) => {\r\n  const [nameText, setNameText] = useState('');\r\n  const [calorieText, setCalorieText] = useState('');\r\n  const [fatText, setFatText] = useState('');\r\n  const [carbText, setCarbText] = useState('');\r\n  const [proteinText, setProteinText] = useState('');\r\n  // const [bodyIdText, setBodyIdtext] = useState('')\r\n\r\n    const [AddFood] = useMutation(ADD_FOOD);\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        try {\r\n          const { data } = await AddFood({\r\n            variables: { bodyId,nameText,calorieText,fatText,carbText,proteinText  },\r\n          });\r\n    \r\n          setNameText('');\r\n          setCalorieText('')\r\n          setFatText('')\r\n          setCarbText('')\r\n          setProteinText('')\r\n         \r\n\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n\r\n\r\n      const handleNameChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        if (name === 'foodName') {\r\n          setNameText(value);  \r\n        }\r\n      };\r\n\r\n      // const handleBodyIdChange = (event) => {\r\n      //   const { name, value } = event.target;\r\n    \r\n      //   if (name === 'bodyId') {\r\n      //     setBodyIdtext(value);  \r\n      //   }\r\n      // };\r\n\r\n      const handleCalorieChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        if (name === 'foodcalories') {\r\n          setCalorieText(value);  \r\n        }\r\n      };\r\n\r\n      const handleFatChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        if (name === 'foodfats') {\r\n          setFatText(value);  \r\n        }\r\n      };\r\n\r\n      const handleCarbChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        if (name === 'foodcarbs') {\r\n          setCarbText(value);  \r\n        }\r\n      };\r\n\r\n      const handleProteinChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        if (name === 'foodprotein') {\r\n          setProteinText(value);  \r\n        }\r\n      };\r\n\r\n\r\n      \r\n\r\n    return (\r\n        <div>\r\n          <h4>Add your own customized food to the plan</h4>\r\n          <form\r\n          className=\"flex-row justify-center justify-space-between-md align-center\"\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n        <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"foodName\"\r\n            placeholder=\"Add your food's name...\"\r\n            value={nameText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleNameChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"bodyId\"\r\n            placeholder=\"Add which plan do you want to add the food in\"\r\n            value={bodyIdText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleBodyIdChange}\r\n          ></textarea>\r\n        </div> */}\r\n\r\n        <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"foodcalories\"\r\n            placeholder=\"Add your food's calories...\"\r\n            value={calorieText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleCalorieChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"foodfats\"\r\n            placeholder=\"Add your food's fats...\"\r\n            value={fatText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleFatChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"foodcarbs\"\r\n            placeholder=\"Add your food's carbs...\"\r\n            value={carbText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleCarbChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"foodprotein\"\r\n            placeholder=\"Add your food's protein...\"\r\n            value={proteinText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleProteinChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-12 col-lg-3\">\r\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n            Add Food\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n  export default FoodForm\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst FoodList = ({ foods = [] }) => {\r\n  if (!foods.length) {\r\n    return <h3>No foods Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"p-5 display-inline-block\" style={{ borderBottom: '1px dotted #1a1a1a' }}>\r\n        Foods\r\n      </h3>\r\n      <div className=\"flex-row my-4\">\r\n        {foods &&\r\n          foods.map((food) => (\r\n            <div key={food._id} className=\"col-12 mb-3 pb-3\">\r\n              <div className=\"p-3 bg-dark text-light\">\r\n                <div className=\"card-body px-1 py-1\">\r\n                  <img alt={food.name} src={`/images/${food.image}`}  width=\"300\" height=\"200\"/>\r\n                  <p>Food: {food.name}</p>\r\n                  <p>Category: {food.category}</p>\r\n                  <p>Calories: {food.calories}</p>\r\n                  <p>Fats: {food.fats}</p>\r\n                  <p>Carbs: {food.carbs}</p>\r\n                  <p>Protein: {food.protein}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoodList;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport FoodForm from '../components/FoodForm';\nimport FoodList from '../components/FoodList';\n\nimport { GET_SINGLEBODY } from '../utils/queries';\nimport Auth from '../utils/auth';\n\nconst SingleBody = () => {\n  const { bodyId } = useParams();\n\n\n  const { loading, data } = useQuery(GET_SINGLEBODY, {\n    variables: { bodyId: bodyId },\n  });\n\n  const body = data?.body || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {Auth.loggedIn() ? (\n        <div>\n          <div className=\"my-5\">\n            <FoodList foods={body.foods} />\n            \n          </div>\n          <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n            <FoodForm bodyId={body._id} />\n          </div>\n        </div>\n      ) : (\n        <span>(log in to check out)</span>\n      )}\n    </div>\n  );\n};\n\nexport default SingleBody;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>\n          Made with{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link className=\"text-light\" to=\"/\">\n          <h1 className=\"m-0\">Big Macros</h1>\n        </Link>\n        <p className=\"m-0\">Let's become stronger!!!</p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\r\nimport Auth from \"../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/\">\r\n              Home page\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n    \r\n  );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\n\r\nimport MainPage from './pages/MainPage'\r\nimport Login from './pages/Login'\r\nimport Singlebody from './pages/Singlebody'\r\nimport Footer from './components/Footer'\r\nimport Header from './components/Header'\r\nimport Signup from './pages/Signup'\r\nimport Nav from './components/Nav'\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n  });\r\n  \r\n  const authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : '',\r\n      },\r\n    };\r\n  });\r\n  \r\n  const client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n  });\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <Nav />\r\n          <div className=\"container\">\r\n            <Routes>\r\n              <Route \r\n                path=\"/\" \r\n                element={<MainPage />} \r\n              />\r\n              \r\n              <Route\r\n                path=\"/login\"\r\n                element={<Login />}\r\n              />\r\n              <Route \r\n                path=\"/signup\" \r\n                element={<Signup />} \r\n              />\r\n              <Route \r\n                path=\"/bodies/:bodyId\" \r\n                element={<Singlebody />} \r\n              />\r\n            </Routes>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n  //reportWebVitals();\n  serviceWorker.register();"],"sourceRoot":""}