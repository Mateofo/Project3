{"ast":null,"code":"import { Trie } from \"@wry/trie\";\nimport { Cache } from \"./cache.js\";\nimport { Entry } from \"./entry.js\";\nimport { parentEntrySlot } from \"./context.js\";\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport { bindContext, noContext, nonReactive, setTimeout, asyncFromGen } from \"./context.js\";\n// A lighter-weight dependency, similar to OptimisticWrapperFunction, except\n// with only one argument, no makeCacheKey, no wrapped function to recompute,\n// and no result value. Useful for representing dependency leaves in the graph\n// of computation. Subscriptions are supported.\nexport { dep } from \"./dep.js\";\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nvar defaultKeyTrie;\nexport function defaultMakeCacheKey() {\n  var trie = defaultKeyTrie || (defaultKeyTrie = new Trie(typeof WeakMap === \"function\"));\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return trie.lookupArray(args);\n}\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { Trie as KeyTrie };\nvar caches = new Set();\nexport function wrap(originalFunction) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.create(null),\n    _ref$max = _ref.max,\n    max = _ref$max === void 0 ? Math.pow(2, 16) : _ref$max,\n    _ref$makeCacheKey = _ref.makeCacheKey,\n    makeCacheKey = _ref$makeCacheKey === void 0 ? defaultMakeCacheKey : _ref$makeCacheKey,\n    keyArgs = _ref.keyArgs,\n    subscribe = _ref.subscribe;\n  var cache = new Cache(max, function (entry) {\n    return entry.dispose();\n  });\n  var optimistic = function optimistic() {\n    var key = makeCacheKey.apply(null, keyArgs ? keyArgs.apply(null, arguments) : arguments);\n    if (key === void 0) {\n      return originalFunction.apply(null, arguments);\n    }\n    var entry = cache.get(key);\n    if (!entry) {\n      cache.set(key, entry = new Entry(originalFunction));\n      entry.subscribe = subscribe;\n      // Give the Entry the ability to trigger cache.delete(key), even though\n      // the Entry itself does not know about key or cache.\n      entry.forget = function () {\n        return cache.delete(key);\n      };\n    }\n    var value = entry.recompute(Array.prototype.slice.call(arguments));\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n    caches.add(cache);\n    // Clean up any excess entries in the cache, but only if there is no\n    // active parent entry, meaning we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (!parentEntrySlot.hasValue()) {\n      caches.forEach(function (cache) {\n        return cache.clean();\n      });\n      caches.clear();\n    }\n    return value;\n  };\n  Object.defineProperty(optimistic, \"size\", {\n    get: function get() {\n      return cache[\"map\"].size;\n    },\n    configurable: false,\n    enumerable: false\n  });\n  Object.freeze(optimistic.options = {\n    max: max,\n    makeCacheKey: makeCacheKey,\n    keyArgs: keyArgs,\n    subscribe: subscribe\n  });\n  function dirtyKey(key) {\n    var entry = cache.get(key);\n    if (entry) {\n      entry.setDirty();\n    }\n  }\n  optimistic.dirtyKey = dirtyKey;\n  optimistic.dirty = function dirty() {\n    dirtyKey(makeCacheKey.apply(null, arguments));\n  };\n  function peekKey(key) {\n    var entry = cache.get(key);\n    if (entry) {\n      return entry.peek();\n    }\n  }\n  optimistic.peekKey = peekKey;\n  optimistic.peek = function peek() {\n    return peekKey(makeCacheKey.apply(null, arguments));\n  };\n  function forgetKey(key) {\n    return cache.delete(key);\n  }\n  optimistic.forgetKey = forgetKey;\n  optimistic.forget = function forget() {\n    return forgetKey(makeCacheKey.apply(null, arguments));\n  };\n  optimistic.makeCacheKey = makeCacheKey;\n  optimistic.getKey = keyArgs ? function getKey() {\n    return makeCacheKey.apply(null, keyArgs.apply(null, arguments));\n  } : makeCacheKey;\n  return Object.freeze(optimistic);\n}","map":{"version":3,"names":["Trie","Cache","Entry","parentEntrySlot","bindContext","noContext","nonReactive","setTimeout","asyncFromGen","dep","defaultKeyTrie","defaultMakeCacheKey","trie","WeakMap","_len","arguments","length","args","Array","_key","lookupArray","KeyTrie","caches","Set","wrap","originalFunction","_ref","undefined","Object","create","_ref$max","max","Math","pow","_ref$makeCacheKey","makeCacheKey","keyArgs","subscribe","cache","entry","dispose","optimistic","key","apply","get","set","forget","delete","value","recompute","prototype","slice","call","add","hasValue","forEach","clean","clear","defineProperty","size","configurable","enumerable","freeze","options","dirtyKey","setDirty","dirty","peekKey","peek","forgetKey","getKey"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}